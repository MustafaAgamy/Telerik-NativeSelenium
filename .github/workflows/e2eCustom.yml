name: E2E Tests Custom

on:
  workflow_dispatch:
    inputs:
      testsPath:
        description: 'Path to Tests to be Executed'
        default: ''
      browsers:
        description: 'Comma-separated list of browsers to execute tests against (e.g., chrome,firefox,edge)'
        default: 'all'

jobs:
  preprocess:
    runs-on: windows-latest
    outputs:
      selected: ${{ steps.process.outputs.selected }}
    steps:
      - name: Process Browser Input
        id: process
        run: |
          $browsers="${{ github.event.inputs.browsers }}"
          echo "Selected browsers: $browsers"
          echo "::set-output name=selected::$browsers"
      - name: Get Latest Allure Version
        id: allure_version
        shell: pwsh
        run: |
          $response = Invoke-RestMethod -Uri "https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/maven-metadata.xml"
          $allure_version = $response.metadata.versioning.latest
          echo "Latest Allure version: $allure_version"
          echo "::set-output name=version::$allure_version"
      - name: Download Allure
        shell: pwsh
        run: |
            $version = "${{ steps.allure_version.outputs.version }}"
            Invoke-WebRequest -Uri "https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/$version/allure-commandline-$version.zip" -OutFile "allure.zip"
      - name: Extract Allure
        shell: pwsh
        run: |
            $version = "${{ steps.allure_version.outputs.version }}"
            $destinationPath = "${{ github.workspace }}/allure"
            if (-not (Test-Path -Path $destinationPath)) {
                New-Item -ItemType Directory -Path $destinationPath -Force
            }
            Expand-Archive -Path "allure.zip" -DestinationPath $destinationPath
            $files = Get-ChildItem -Path $destinationPath
            $files | ForEach-Object { Write-Output $_.FullName }
            Write-Output "Allure has been extracted to $destinationPath"
      - name: Add Allure to PATH
        shell: pwsh
        run: |
            $version = "${{ steps.allure_version.outputs.version }}"
            $destinationPath = "${{ github.workspace }}\allure\bin"
          
            $env:PATH = "$destinationPath;$env:PATH"
            Write-Output "Allure has been added to the PATH"
      - name: Verify Allure Installation
        shell: pwsh
        run: |
          $version = "${{ steps.allure_version.outputs.version }}"
          Write-Host "OS is Windows"
          
          # Define the path for Windows
          $allurePath = "${{ github.workspace }}\Allure\allure-$version\bin\allure.bat"

          # Check if the Allure executable exists
          if (Test-Path $allurePath) {
          Write-Host "Allure is correctly installed at $allurePath."
          } else {
            Write-Error "Allure command not found at $allurePath!"
          }
  E2E_Chrome_Windows_Test:
    runs-on: windows-latest
    needs: preprocess
    if: contains(needs.preprocess.outputs.selected, 'chrome') || contains(needs.preprocess.outputs.selected, 'all')
    permissions:
      checks: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.6
      - name: Check Allure Location
        shell: pwsh
        run: |
           $allureLocation = Get-Command allure -ErrorAction SilentlyContinue
           if ($null -ne $allureLocation) {
               Write-Output "Allure is located at: $($allureLocation.Source)"
           } else {
               Write-Error "Allure is not found in the PATH!"
           }
      - name: Run Tests on Chrome
        continue-on-error: true
        run: mvn test -DtargetBrowserName="chrome" -DexecutionAddress="local" -DtargetOperatingSystem="WINDOWS" -DheadlessExecution="true" -Dtest="${{ github.event.inputs.testsPath }}"
      - name: Generate Allure Report
        run: allure generate build/allure-results --single-file -o allure-report
      - name: Upload Allure Report as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Allure_Report
          path: allure-report/*
      # - name: Generate Allure Report
      #   run: .\allure.bat generate --single-file -o allure-report
      # - name: Upload Allure Report as Artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: Chrome_Windows_Allure
      #     path: allure-report/*

  E2E_Firefox_Windows_Test:
    runs-on: windows-latest
    needs: preprocess
    if: contains(needs.preprocess.outputs.selected, 'firefox') || contains(needs.preprocess.outputs.selected, 'all')
    permissions:
      checks: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.6
      - name: Run Tests on Firefox
        continue-on-error: true
        run: mvn test -DtargetBrowserName="firefox" -DexecutionAddress="local" -DtargetOperatingSystem="WINDOWS" -DheadlessExecution="true" -Dtest="${{ github.event.inputs.testsPath }}"

  E2E_Edge_Windows_Test:
    runs-on: windows-latest
    needs: preprocess
    if: contains(needs.preprocess.outputs.selected, 'edge') || contains(needs.preprocess.outputs.selected, 'all')
    permissions:
      checks: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.6
      - name: Run Tests on Edge
        continue-on-error: true
        run: mvn test -DtargetBrowserName="microsoftedge" -DexecutionAddress="local" -DtargetOperatingSystem="WINDOWS" -DheadlessExecution="true" -Dtest="${{ github.event.inputs.testsPath }}"
      # - name: Generate Allure Report
      #   run: .\allure.bat generate --single-file -o allure-report
      # - name: Upload Allure Report as Artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: Edge_Windows_Allure
      #     path: allure-report/*
